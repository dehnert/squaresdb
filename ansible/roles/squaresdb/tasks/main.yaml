- name: Install packages
  ansible.builtin.package:
      name:
        # Ansible
        - python3-pymysql
        - python3-virtualenv
        # Python build-deps
        - gcc
        - python3-dev
        - libxmlsec1-dev
        - pkg-config
        - libmysqlclient-dev
        # Hosting
        - libapache2-mod-wsgi-py3
        # JS local libraries
        - libjs-bootstrap4
        - libjs-popper.js
        # mmblanche
        - libwww-perl
      state: present

# Unix account
- name: Create Unix group
  ansible.builtin.group:
      name: squaresdb

- name: Create Unix user
  ansible.builtin.user:
      name: squaresdb
      group: squaresdb
      comment: SquaresDB
      password: '!'
      home: /home/squaresdb


# Database

# Assumes mysql is preinstalled, with the socket pluggable auth mechanism
# setup -- see
# https://dev.mysql.com/doc/refman/8.0/en/socket-pluggable-authentication.html
# Also assumes timezones are loaded already:
# https://docs.djangoproject.com/en/4.0/ref/databases/#mysql-time-zone-definitions
# https://dev.mysql.com/doc/refman/8.0/en/mysql-tzinfo-to-sql.html

- name: Create MySQL DB
  community.mysql.mysql_db:
      name: squaresdb
      state: present
      encoding: utf8
      collation: utf8_general_ci
  when: dbtype == "mysql"

- name: Create MySQL user
  community.mysql.mysql_user:
      name: squaresdb
      state: present
      plugin: auth_socket
      priv:
          'squaresdb.*': 'ALTER,CREATE,DELETE,DROP,INDEX,INSERT,REFERENCES,SELECT,UPDATE'
  when: dbtype == "mysql"

# SquaresDB code
- name: Install virtualenv
  ansible.builtin.pip:
      name:
          - -egit+https://github.com/dehnert/social-core.git@snap/names-settings#egg=social-auth-core[saml]
          - -egit+https://github.com/tech-squares/squaresdb.git@{{squaresdb_branch}}#egg=squaresdb[mysql]
      # editable=true only applies to the first thing in the name list?
      # So we prefix each requirement with -e instead
      # https://github.com/ansible/ansible/issues/77755
      #editable: true
      virtualenv: /home/squaresdb/venv
      virtualenv_python: python3
  vars:
      # Can be overridden by just passing `--extra-vars "squaresdb_branch=foo"` to ansible-playbook
      squaresdb_branch: socialauth
  become: yes
  become_user: squaresdb
  notify:
      - Reload apache

# TODO: Better settings. Need to configure MySQL
# TODO: Import membership DB?
# TODO: create superuser account?

- name: Add Django SECRET_KEY if missing
  ansible.builtin.copy:
      dest: /home/squaresdb/venv/src/squaresdb/squaresdb/settings/django_secret_key.txt
      owner: squaresdb
      mode: 0600
      content: "{{lookup('community.general.random_string', special=false, length=50)}}"
      force: no
  notify:
      - Reload apache

- name: Copy external auth secrets
  ansible.builtin.copy:
      src: roles/squaresdb/files/{{item}}
      dest: /home/squaresdb/venv/src/squaresdb/squaresdb/settings/{{item}}
      owner: squaresdb
      mode: 0600
      decrypt: yes
  loop:
      - google-oauth.json
      - saml.key
      # Not secret, so not encrypted; Ansible handles this automatically
      - saml.crt
      # Mailing lists
      - listpass.main.txt
      - listpass.challenge.txt
  notify:
      - Reload apache

- name: Create mmblanche password directory
  ansible.builtin.file:
      path: /home/squaresdb/.mmblanche/
      state: directory
      owner: squaresdb
      mode: 0700

# Ideally the next two plays would get merged, but I don't really understand
# Ansible/Jinja2 well enough to do so, and this isn't *that* awkward
- name: Create mailing list main password links
  ansible.builtin.file:
      src: ../venv/src/squaresdb/squaresdb/settings/listpass.main.txt
      dest: /home/squaresdb/.mmblanche/{{item}}
      state: link
      owner: squaresdb
  loop:
    - tech-squares
    - tech-squares-social
    - tech-squares-discuss
    - tech-squares-interest
    - squares-shenanigans
    - tech-squares-rounds

- name: Create mailing list challenge password links
  ansible.builtin.file:
      src: ../venv/src/squaresdb/squaresdb/settings/listpass.challenge.txt
      dest: /home/squaresdb/.mmblanche/{{item}}
      state: link
      owner: squaresdb
  loop:
    - challenge-discuss
    - a1-dancers
    - a2-dancers
    - c1-dancers
    - c2-dancers
    - c3a-dancers
    - c3b-dancers
    - c4-dancers
    # Not sure why this uses the challenge password, not the main one
    - tech-squares-rounds-class

- name: Configure Django
  ansible.builtin.template:
      src: "roles/squaresdb/templates/django_local.py.j2"
      dest: /home/squaresdb/venv/src/squaresdb/squaresdb/settings/local.py
  notify:
      - Reload apache

- name: Django - Migrate DB
  ansible.builtin.command:
      cmd: ../../bin/django-admin migrate
      chdir: /home/squaresdb/venv/src/squaresdb/
  environment:
      DJANGO_SETTINGS_MODULE: squaresdb.settings
  become: yes
  become_user: squaresdb
  register: django_migrate_out
- debug:
      var: django_migrate_out.stdout_lines

- name: Django - createinitialrevisions
  ansible.builtin.command:
      cmd: ../../bin/django-admin createinitialrevisions --comment="Initial revision (in Ansible)" membership
      chdir: /home/squaresdb/venv/src/squaresdb/
  environment:
      DJANGO_SETTINGS_MODULE: squaresdb.settings
  become: yes
  become_user: squaresdb
  register: django_createinitialrevisions_out
- debug:
      var: django_createinitialrevisions_out.stdout_lines

- name: Django - load mailing list fixtures
  ansible.builtin.command:
      cmd: ../../bin/django-admin loaddata --app=mailinglist squares
      chdir: /home/squaresdb/venv/src/squaresdb/
  environment:
      DJANGO_SETTINGS_MODULE: squaresdb.settings
  become: yes
  become_user: squaresdb
  register: django_loaddata_out
- debug:
      var: django_loaddata_out.stdout_lines

- name: Install list membership caching cron job
  ansible.builtin.cron:
      name: SquaresDB cache lists
      minute: 17
      hour: 7
      job: env DJANGO_SETTINGS_MODULE=squaresdb.settings /home/squaresdb/venv/bin/django-admin cache_lists >> /home/squaresdb/cache_lists.log
      cron_file: squaresdb_cache_lists
      user: squaresdb

- name: create vhost directory for static files
  ansible.builtin.file:
      name: /var/www/squaresdb/
      state: directory
      owner: squaresdb
      mode: 0755

- name: Collect static files
  ansible.builtin.command:
      cmd: ../../bin/python ./manage.py collectstatic --link
      chdir: /home/squaresdb/venv/src/squaresdb/
      creates: /var/www/squaresdb/static/admin/
  become: yes
  become_user: squaresdb


# Web server
# This uses the photos vhost, but that's fine
- name: Fetch cert
  ansible.builtin.command:
      cmd: certbot --non-interactive --agree-tos -m squares-db@mit.edu certonly --webroot --webroot-path=/var/www/html/ -d {{extname}} {%for name in vhost_aliases%} -d {{name}}{%endfor%}
      creates: /etc/letsencrypt/live/{{extname}}/

- name: Configure Apache2 vhosts
  ansible.builtin.template:
      src: "roles/squaresdb/templates/vhost.conf"
      dest: "/etc/apache2/sites-available/squaresdb.conf"
  notify:
      - Reload apache

- name: Enable Apache2 Machine vhost
  ansible.builtin.file:
      state: link
      src: ../sites-available/squaresdb.conf
      dest: /etc/apache2/sites-enabled/squaresdb.conf
  notify:
      - Reload apache
